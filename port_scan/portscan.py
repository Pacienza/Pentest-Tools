import socket  # Lib que manipula Sockets
import sys  # lib pra acessar os argumentos digitados na linha de comando

"""
host -> Endereço a levar scan
ports -> lista de portas a serem verificadas
"""
def scan(host, ports):
    try:
        for port in ports:  # Itera sobre cada porta na lista fornecida
            client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  # Cria um socket TCP
            client.settimeout(0.5)  # Define timeout de 0.5 segundos pra conexão

            # Tenta conectar ao host na porta especificada
            code = client.connect_ex((host, int(port)))
            if code == 0:
                print("[+] {} open".format(port))  # Se a conexão for bem-sucedida, a porta está aberta
    except:
        print("Erro, alguma coisa deu errada!")  # Printa em caso de erro


if __name__ == "__main__":
    """
    - Verifica se há pelo menos dois argumentos na linha
    - Se n tiver 2 argumentos, o 1 é o host e o 2 é a lista de portas
    - Se n houver lista de portas no código, usa uma lista padrão de "portas comuns"
    """
    if len(sys.argv) >= 2:
        host = sys.argv[1]  # O primeiro argumento é o host a ser escaneado
        if len(sys.argv) >= 3:
            ports = sys.argv[2].split(",")  # O segundo argumento é a lista de portas, separada por vírgulas
        else:
            # Se nenhuma lista de portas for fornecida, usa uma lista padrão de portas comuns
            ports = [21, 22, 23, 25, 80, 443, 445, 8080, 8443, 3306, 139, 135]

        scan(host, ports)  # Chama a função scan com o host e a lista de portas
    else:
        print("Modo de Uso: python portscan.py google.com 22,23,80,443")  # Printa o jeito certo de usar o script
